name: jupyterlite-build
on:
    # Triggers the workflow on push or pull request events but only for the "main" branch
    push:
      branches: [ "main", "js" ]
    pull_request:
      branches: [ "main", "js"]


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
          emsdk_ver: ["3.1.45"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment_wasm_build.yml

      ################################################################
      # setup emsdk
      ################################################################
      - name: "setup emsdk"
        shell: bash -el {0}
        run: |
            ./emsdk/setup_emsdk.sh   ${{ matrix.emsdk_ver }} ~/emsdk_install

      ################################################################
      # build emscripten python
      ################################################################
      - name: "run emscripten_python_build.sh"
        shell: bash -el {0}
        run: |
          ./emscripten_python_build.sh ~/emsdk_install


      ################################################################
      # fix permissions
      ################################################################
      - name: Fix permissions
        run: |
          chmod -c -R +rX "build_wasm/_output/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done

      ################################################################
      # upload to github pages
      ################################################################
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: build_wasm/_output


  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3 # or specific "vX.X.X" version tag for this action
