name: dev-build
on:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.job }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unix:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            build_type: Release
          - os: ubuntu-latest
            build_type: Debug
          - os: macos-latest
            build_type: Release

      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:

      - uses: actions/checkout@v3

      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores

      - name: Install Conda environment from environment.yml
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          init-shell: >-
            bash
          cache-environment: true
          post-cleanup: 'all'


      - name: cmake configure
        shell: bash -l {0}
        run: |
          mkdir -p bld
          cd bld
          cmake \
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
              -DBUILD_TESTS=ON \
              -DBUILD_SINGLE_BINARY_TESTS=ON \
              -DBUILD_PYTHON=ON \
              -DBUILD_DOCS=ON \
          .. -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX

      - name: Build
        shell: bash -l {0}
        run: |
          cd bld
          make -j ${{ steps.cpu-cores.outputs.count }}

      - name: Run C++ tests  via ctest
        shell: bash -l {0}
        run: |
            cd bld
            for i in {1..10}; do echo "run $i"; ctest --output-on-failure -R nxtgm_test; done

      - name: Run C++ tests directly
        shell: bash -l {0}
        run: |
            cd bld
            for i in {1..10}; do echo "run $i";  NXTGM_PLUGIN_PATH=src/nxtgm/plugins ./tests/nxtgm_test_all; done

      # at the moment the ilp highs tests are not stable enough and already leak
      # when loading the shared library. Therefore we skip them for now
      - name: Run C++ tests with valgrind
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.build_type == 'Debug' }}
        shell: bash -l {0}
        run: |
            sudo apt install -y libc6-dbg
            $MAMBA_EXE install -y valgrind
            cd bld
            NXTGM_PLUGIN_PATH=src/nxtgm/plugins valgrind --error-exitcode=1 --tool=memcheck --leak-check=full ./tests/nxtgm_test_all --tce="ilp*"


      - name: Run Python tests
        shell: bash -l {0}
        run: |
            cd bld
            ctest --output-on-failure -R python

      - name: install
        shell: bash -l {0}
        run: |
            cd bld
            make install

      - name: run tests from installed binaries / libraries
        shell: bash -l {0}
        run: |
          nxtgm_test_all

      - name: Build docs
        shell: bash -l {0}
        run: |
            cd bld
            make docs

  windows:
    strategy:
      matrix:
        os: [windows-latest]
        build_type: ["Release", "Debug"]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:

      - uses: actions/checkout@v3

      - name: Install Conda environment from environment.yml
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          init-shell: >-
            cmd.exe
          cache-environment: true
          post-cleanup: 'all'

      - name: build and test
        shell: cmd /C CALL {0}
        run: |

          mkdir bld
          cd bld
          set PATH=%PATH%;%CD%
          cmake .. ^
            -G Ninja ^
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ^
            -DBUILD_TESTS=ON ^
            -DBUILD_SINGLE_BINARY_TESTS=ON ^
            -DBUILD_PYTHON=ON ^
            -DBUILD_DOCS=OFF ^
            -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library" ^
            -DCMAKE_INSTALL_PREFIX="%CONDA_PREFIX%
          cmake --build . --config ${{ matrix.build_type }}
          cmake --install . --config ${{ matrix.build_type }}

      - name: run tests from installed binaries / libraries
        shell: cmd /C CALL {0}
        run: |
          nxtgm_test_all

      - name: run C++ tests
        shell: cmd /C CALL {0}
        run: |
          cd bld
          ctest --output-on-failure  -R nxtgm_testx

      - name: run Python tests
        shell: cmd /C CALL {0}
        run: |
          cd bld
          ctest --output-on-failure  -R python
