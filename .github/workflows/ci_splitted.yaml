name: build
on:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.job }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unix:
    strategy:
      matrix:
        os: ["ubuntu-latest"," macos-latest"]
        build_type: ["Release"]

      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:


      - uses: actions/checkout@v3

      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores

      - name: Install Conda environment from environment.yml
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          init-shell: >-
            bash
          cache-environment: true
          post-cleanup: 'all'

      - name: cmake configure
        shell: bash -l {0}
        run: |
          mkdir -p bld
          cd bld
          cmake .. \
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
              -DBUILD_TESTS=ON \
              -DBUILD_SINGLE_BINARY_TESTS=ON \
              -DBUILD_PYTHON_BINDINGS=ON \
              -DBUILD_DOCS=ON \
              -DBUILD_PLUGIN_QPBO_KOLMOGOROV=OFF \
              -DBUILD_PLUGIN_MIN_ST_CUT_KOLMOGOROV=OFF \
              -DBUILD_PLUGIN_HOCR_FIX=OFF \
              -DBUILD_PLUGINS_DISCRETE_GM_OPTIMIZER=OFF \
              -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX

      - name: Build
        shell: bash -l {0}
        run: |
          cd bld
          make -j ${{ steps.cpu-cores.outputs.count }}

      - name: install
        shell: bash -l {0}
        run: |
            cd bld
            make install

      - name: build solvers
        shell: bash -l {0}
        run: |
          cd src/nxtgm/plugins/discrete_gm_optimizer
          # loop over all subdirectories
          for d in */ ; do
            echo "building" $d
            cd $d
            mkdir -p bld
            cd bld
            cmake .. -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX
            make -j ${{ steps.cpu-cores.outputs.count }}
            make install
            cd ../..
          done

      - name: Build&install qpbo kolmogorov
        shell: bash -l {0}
        run: |
            cd src/nxtgm/plugins/qpbo/kolmogorov
            mkdir -p bld
            cd bld
            cmake .. -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
            make -j ${{ steps.cpu-cores.outputs.count }}
            make install

      - name: Build&install min_st_cut kolmogorov
        shell: bash -l {0}
        run: |
            cd src/nxtgm/plugins/min_st_cut/kolmogorov
            mkdir -p bld
            cd bld
            cmake .. -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
            make -j ${{ steps.cpu-cores.outputs.count }}
            make install

      - name: Build&install hocr fix
        shell: bash -l {0}
        run: |
            cd src/nxtgm/plugins/hocr/fix
            mkdir -p bld
            cd bld
            cmake .. -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
            make -j ${{ steps.cpu-cores.outputs.count }}
            make install

      - name: run installed tests
        shell: bash -l {0}
        run: |
            nxtgm_test_all

  windows:
    strategy:
      matrix:
        os: [windows-latest]
        build_type: ["Release", "Debug"]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:

      - uses: actions/checkout@v3

      - name: Install Conda environment from environment.yml
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          init-shell: >-
            cmd.exe
          cache-environment: true
          post-cleanup: 'all'

      - name: build and test
        shell: cmd /C CALL {0}
        run: |
          mkdir bld
          cd bld
          set PATH=%PATH%;%CD%
          cmake .. ^
            -G Ninja ^
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ^
            -DBUILD_TESTS=ON ^
            -DBUILD_SINGLE_BINARY_TESTS=ON ^
            -DBUILD_PYTHON_BINDINGS=ON ^
            -DBUILD_DOCS=OFF ^
            -DBUILD_PLUGIN_QPBO_KOLMOGOROV=OFF ^
            -DBUILD_PLUGIN_MIN_ST_CUT_KOLMOGOROV=OFF ^
            -DBUILD_PLUGIN_HOCR_FIX=OFF ^
            -DBUILD_PLUGINS_DISCRETE_GM_OPTIMIZER=OFF ^
            -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library" ^
            -DCMAKE_INSTALL_PREFIX="%CONDA_PREFIX%
          cmake --build . --config ${{ matrix.build_type }}
          cmake --install . --config ${{ matrix.build_type }}

      - name: build solvers
        shell: cmd /C CALL {0}
        run: |
          cd src\nxtgm\plugins\discrete_gm_optimizer
          # loop over all subdirectories
          for /D %%d in (*) do (
            echo "building" %%d
            cd %%d
            mkdir bld
            cd bld
            cmake .. ^
              -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library" ^
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ^
              -DCMAKE_INSTALL_PREFIX="%CONDA_PREFIX%

            cmake --build . --config ${{ matrix.build_type }}
            cmake --install . --config ${{ matrix.build_type }}
            cd ..\..
          )

      - name: Build&install qpbo kolmogorov
        shell: cmd /C CALL {0}
        run: |
            cd src\nxtgm\plugins\qpbo\kolmogorov
            mkdir bld
            cd bld
            cmake .. ^
              -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library" ^
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ^
              -DCMAKE_INSTALL_PREFIX="%CONDA_PREFIX%

            cmake --build . --config ${{ matrix.build_type }}
            cmake --install . --config ${{ matrix.build_type }}

      - name: Build&install min_st_cut kolmogorov
        shell: cmd /C CALL {0}
        run: |
            cd src\nxtgm\plugins\min_st_cut\kolmogorov
            mkdir bld
            cd bld
            cmake .. ^
              -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library" ^
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ^
              -DCMAKE_INSTALL_PREFIX="%CONDA_PREFIX%

            cmake --build . --config Release
            cmake --install . --config Release

      - name: Build&install hocr fix
        shell: cmd /C CALL {0}
        run: |
            cd src\nxtgm\plugins\hocr\fix
            mkdir bld
            cd bld
            cmake .. ^
              -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library" ^
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ^
              -DCMAKE_INSTALL_PREFIX="%CONDA_PREFIX%

            cmake --build . --config ${{ matrix.build_type }}
            cmake --install . --config ${{ matrix.build_type }}

      - name: run installed tests
        shell: cmd /C CALL {0}
        run: |
            nxtgm_test_all
